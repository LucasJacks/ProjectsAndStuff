DROP DATABASE AJKS;
DROP DATABASE BACKUP_AJKS;

DELIMITER ;

CREATE DATABASE AJKS;

USE AJKS;

CREATE TABLE DADOSPESSOAS(
	IDDADOSPESSOAS INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(45) NOT NULL,
	EMAIL VARCHAR(45) UNIQUE NOT NULL,
	NIVEL CHAR(1) NOT NULL,
	DATANASCIMENTO DATE NOT NULL,
	SEXO CHAR(1) NOT NULL,
	CPF CHAR(14) UNIQUE NOT NULL,
	CELULAR VARCHAR(14) UNIQUE NOT NULL,
	CEP CHAR (9) NOT NULL,
	RUA VARCHAR(30) NOT NULL,
	NUMERO VARCHAR(8) NOT NULL,
	BAIRRO VARCHAR(25) NOT NULL,
	CIDADE VARCHAR(40) NOT NULL,
	ESTADO CHAR(2) NOT NULL
);

CREATE TABLE MOTORISTA (
	IDMOTORISTA INT PRIMARY KEY AUTO_INCREMENT,
	NUMEROREGISTRO VARCHAR(10) UNIQUE NOT NULL,
	VALIDADE DATE NOT NULL,
	ID_DADOSPESSOAS INT
);


CREATE TABLE ADMIN(
	IDADMIN INT PRIMARY KEY AUTO_INCREMENT,
	SENHA VARCHAR(12) NOT NULL,
	ID_DADOSPESSOAS INT
);

CREATE TABLE VIATURA (
	IDVIATURA INT PRIMARY KEY AUTO_INCREMENT,
	TIPOVEICULO VARCHAR(45) NOT NULL,
	MARCA VARCHAR(25) NOT NULL,
	MODELO VARCHAR(25) NOT NULL,
	COR VARCHAR(25) NOT NULL,
	ANOFABRICACAO CHAR(4) NOT NULL,
	PLACA CHAR(8) UNIQUE NOT NULL,
	RENAVAN CHAR(11) UNIQUE NOT NULL,
	PASSAGEIROS INT NOT NULL
);

CREATE TABLE VIAGENS (
	IDVIAGENS INT PRIMARY KEY AUTO_INCREMENT,
	CIDADE VARCHAR(25) NOT NULL,
	DATAHORAINICIO DATETIME NOT NULL,
	DATAHORAFINAL DATETIME NOT NULL,
	COR VARCHAR(15) NOT NULL,
	CEP CHAR(9) NOT NULL,
	RUA VARCHAR(30) NOT NULL,
	NUMERO VARCHAR(8) NOT NULL,
	BAIRRO VARCHAR(25) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	DESCRICAO VARCHAR(200),
	ID_DADOSPESSOAS INT,
	ID_MOTORISTA INT,
	ID_VIATURA INT
);

CREATE  TABLE  PASSAGEIRO (
	IDPASSAGEIRO INT  PRIMARY KEY AUTO_INCREMENT,
	ID_DADOSPESSOAS INT ,
	ID_VIAGEM INT
);




/* CRIAÇÃO DAS FOREIGN KEY */
/* FORAM ADICIONADO OS COMANDOS ON DELETE CASCADE ON UPDATE CASCADE
RESUIMENDO ELES DELETAM E ATUALIZAM EM CASCATA DELETANDO OU ATUALIZANDO EM TODAS
AS FK REFERENCIADAS  */
 /* usando as boas práticas fazeremos primeiros todos
os create table, com todos os seus dados 
mas não colocaremos as primary key nem as foreign key
para isso usaremos o alter table e daremos uma
constraint (regra) inseriindo no primeiro uma PK
e no segundo exemplo abaixo de alter table
fazendo uma FK de uma PK 
isso torna o código mais fácil de ser analisado e entendido
por outros programadores*/

	ALTER TABLE VIAGENS
	ADD CONSTRAINT FK_DADOSPESSOAS_VIAGENS
	FOREIGN KEY (ID_DADOSPESSOAS)
	REFERENCES DADOSPESSOAS(IDDADOSPESSOAS);

	ALTER TABLE VIAGENS
	ADD CONSTRAINT FK_MOTORISTA_VIAGENS
	FOREIGN KEY (ID_MOTORISTA)
	REFERENCES MOTORISTA(IDMOTORISTA);

	ALTER TABLE VIAGENS
	ADD CONSTRAINT FK_VIATURA_VIAGENS
	FOREIGN KEY (ID_VIATURA)
	REFERENCES VIATURA(IDVIATURA);

	ALTER TABLE MOTORISTA
	ADD CONSTRAINT FK_DADOSPESSOAS_MOTORISTA
	FOREIGN KEY (ID_DADOSPESSOAS)
	REFERENCES DADOSPESSOAS(IDDADOSPESSOAS);

	ALTER TABLE ADMIN
	ADD CONSTRAINT FK_DADOSPESSOAS_ADMIN
	FOREIGN KEY (ID_DADOSPESSOAS)
	REFERENCES DADOSPESSOAS(IDDADOSPESSOAS);

	ALTER TABLE PASSAGEIRO
	ADD CONSTRAINT FK_DADOSPESSOAS_PASSAGEIRO
	FOREIGN KEY (ID_DADOSPESSOAS)
	REFERENCES DADOSPESSOAS (IDDADOSPESSOAS);

	ALTER TABLE PASSAGEIRO
	ADD CONSTRAINT FK_VIAGENS_PASSAGEIRO
	FOREIGN KEY (ID_VIAGEM)
	REFERENCES VIAGENS (IDVIAGENS);




/* BACK UP DAS TABAELAS EM OUTRO BANCO DE DADOS */

CREATE DATABASE BACKUP_AJKS;

USE BACKUP_AJKS;

/*CRIANDO AS TABELAS PARA BACKUP DE DADOS */

CREATE TABLE BACKUP_DADOSPESSOAS(
	IDBACKUPDADOSPESSOAS INT PRIMARY KEY AUTO_INCREMENT,
	IDDADOSPESSOAS INT,
	NOME VARCHAR(45) NOT NULL,
	EMAIL VARCHAR(45)  NOT NULL,
	NIVEL CHAR(1) NOT NULL,
	DATANASCIMENTO DATE NOT NULL,
	SEXO CHAR(1) NOT NULL,
	CPF CHAR(14)  NOT NULL,
	CELULAR VARCHAR(14) NOT NULL,
	CEP CHAR (9) NOT NULL,
	RUA VARCHAR(30) NOT NULL,
	NUMERO VARCHAR(8) NOT NULL,
	BAIRRO VARCHAR(25) NOT NULL,
	CIDADE VARCHAR(40) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);

CREATE TABLE BACKUP_MOTORISTA(
	IDBACKUPMOTORISTA INT PRIMARY KEY AUTO_INCREMENT,
	IDMOTORISTA INT,
	NUMEROREGISTRO VARCHAR(10) NOT NULL,
	VALIDADE DATE NOT NULL,
	ID_DADOSPESSOAS INT,
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);

CREATE TABLE BACKUP_ADMIN(
	IDBACKUPADMIN INT PRIMARY KEY AUTO_INCREMENT,
	IDADMIN INT,
	SENHA VARCHAR (12),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);

CREATE TABLE BACKUP_VIATURA(
	IDBACKUPVIATURA INT PRIMARY KEY AUTO_INCREMENT,
	IDVIATURA INT,
	TIPOVEICULO VARCHAR(45) NOT NULL,
	MARCA VARCHAR(25) NOT NULL,
	MODELO VARCHAR(25) NOT NULL,
	COR VARCHAR(25) NOT NULL,
	ANOFABRICACAO CHAR(4) NOT NULL,
	PLACA CHAR(8) NOT NULL,
	RENAVAN CHAR(11) NOT NULL,
	PASSAGEIROS CHAR(2) NOT NULL,
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);

CREATE TABLE BACKUP_VIAGENS(
	IDBACKUPVIAGENS INT PRIMARY KEY AUTO_INCREMENT,
	IDVIAGENS INT,
	CIDADE VARCHAR(25) NOT NULL,
	DATAHORAINICIO DATETIME NOT NULL,
	DATAHORAFINAL DATETIME NOT NULL,
	COR VARCHAR(15) NOT NULL,
	CEP CHAR(9) NOT NULL,
	RUA VARCHAR(30) NOT NULL,
	NUMERO VARCHAR(8) NOT NULL,
	BAIRRO VARCHAR(25) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	DESCRICAO VARCHAR(200),
	ID_DADOSPESSOAS INT,
	ID_MOTORISTA INT,
	ID_VIATURA INT,
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);

CREATE TABLE BACKUP_PASSAGEIRO(
	IDBACKUPPASSAGEIRO INT PRIMARY KEY AUTO_INCREMENT,
	IDPASSAGEIRO INT,
	SENHA VARCHAR (12),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);

/* CRIANDO TRIGGER QUE FICARA OLHANDO PARA A TABELA DADOSPESSOAS
E APÓS A INSERÇÃO DE UM NOVO USUARIO FARÁ BACKUP AUTOMATICO
NO BANCO DE DADOS BACKUP_AJKS */

/* TRIGGER */
/* TRIGGER QUE MUDA STATUS MOTORISTA E VIATURA DE 0 PARA 1 */

/* CONSTRUÇÃO DA TRIGGER QUE IRÁ CHECAR SE O MOTORISTA E VIATURA JÁ FORAM USADOS
E SE A DATA INICIO É MAIOR QUE A DATA FIM E A FIM MENOR QUE A INICIO */

/* A TRIGGER NAO ACEITA SELECT * FROM PRECISO APRENDER A USAR SELECT INTO
E TALVEZ USAR O IF EXISTS E IFNOTEXITS PARA A TABELA */

/* talvez seja melhor usar procedure  */
USE AJKS;

DELIMITER $

/*Procedure que vai checar se dentro do horário de inicio e horádio final, se a viatura selecionada, o motorista selecionado
e a pessoa seleciona estão disponivéis, ou seja se elas já não estão cadastradas na tabela viagens, seja os 3 juntos, ou somente
a viatura, ou motorista ou a pessoa, qualquer um dando positivo, já estando cadastrado em outra viagem na tabela impossibilita
a inclusão dos dados na tabela apresentando um erro para cada categoria. */




		CREATE  PROCEDURE ADICIONAR_VIAGEM(
		  IN pIDVIAGENS INT ,
		  IN pCIDADE VARCHAR(25) ,
		  IN pDATAHORAINICIO DATETIME ,
		  IN pDATAHORAFINAL DATETIME ,
		  IN pCOR VARCHAR(15) ,
		  IN pCEP CHAR(9) ,
		  IN pRUA VARCHAR(30),
		  IN pNUMERO VARCHAR(8) ,
		  IN pBAIRRO VARCHAR(25) ,
		  IN pESTADO CHAR(2) ,
		  IN pDESCRICAO VARCHAR(200),
		  IN pID_DADOSPESSOAS INT,
		  IN pID_MOTORISTA INT,
		  IN pID_VIATURA INT
		)
	BEGIN
		
		DECLARE DisponibilidadeViatura   INT;
		DECLARE DisponibilidadeMotorista INT;

		if exists (Select * from VIAGENS where ID_VIATURA = pID_VIATURA AND  pDATAHORAINICIO between DATAHORAINICIO and DATAHORAFINAL ) THEN
		set DisponibilidadeViatura = 0;
		else
		set DisponibilidadeViatura = 1;

		END IF;

		if exists (Select * from VIAGENS where ID_MOTORISTA = pID_MOTORISTA AND  pDATAHORAINICIO between DATAHORAINICIO and DATAHORAFINAL ) THEN
		set DisponibilidadeMotorista = 0;
		else
		set DisponibilidadeMotorista = 1;

		 END IF;

		if (DisponibilidadeViatura = 1 and DisponibilidadeMotorista = 1) THEN
		
			INSERT INTO VIAGENS (IDVIAGENS, CIDADE, DATAHORAINICIO, DATAHORAFINAL, COR, CEP, RUA, NUMERO, BAIRRO, ESTADO, DESCRICAO, ID_DADOSPESSOAS, ID_MOTORISTA, ID_VIATURA)
	                     VALUES (NULL,pCIDADE, pDATAHORAINICIO, pDATAHORAFINAL, pCOR, pCEP, pRUA, pNUMERO, pBAIRRO, pESTADO, pDESCRICAO, pID_DADOSPESSOAS, pID_MOTORISTA, pID_VIATURA);

		else
		Select 'Motorista ou Viatura indisponível na data/hora selecionada.' as 'Error';
		END IF;

	END
		$

CREATE  PROCEDURE ADICIONAR_VIAGEM99(
		  IN pIDVIAGENS INT ,
		  IN pCIDADE VARCHAR(25) ,
		  IN pDATAHORAINICIO DATETIME ,
		  IN pDATAHORAFINAL DATETIME ,
		  IN pCOR VARCHAR(15) ,
		  IN pCEP CHAR(9) ,
		  IN pRUA VARCHAR(30),
		  IN pNUMERO VARCHAR(8) ,
		  IN pBAIRRO VARCHAR(25) ,
		  IN pESTADO CHAR(2) ,
		  IN pDESCRICAO VARCHAR(200),
		  IN pID_DADOSPESSOAS INT,
		  IN pID_MOTORISTA INT,
		  IN pID_VIATURA INT
		)
	BEGIN
		
		DECLARE DisponibilidadeViatura   INT;
		DECLARE DisponibilidadeMotorista INT;
		DECLARE DisponibilidadePessoas INT;

		if exists (Select * from VIAGENS where ID_DADOSPESSOAS = pID_DADOSPESSOAS AND  pDATAHORAINICIO between DATAHORAINICIO and DATAHORAFINAL ) THEN
		set DisponibilidadePessoas = 0;
		else
		set DisponibilidadePessoas = 1;

		END IF;


		if exists (Select * from VIAGENS where ID_VIATURA = pID_VIATURA AND  pDATAHORAINICIO between DATAHORAINICIO and DATAHORAFINAL ) THEN
		set DisponibilidadeViatura = 0;
		else
		set DisponibilidadeViatura = 1;

		END IF;

		if exists (Select * from VIAGENS where ID_MOTORISTA = pID_MOTORISTA AND  pDATAHORAINICIO between DATAHORAINICIO and DATAHORAFINAL ) THEN
		set DisponibilidadeMotorista = 0;
		else
		set DisponibilidadeMotorista = 1;

		 END IF;

		if (DisponibilidadeViatura = 1 and DisponibilidadeMotorista = 1 OR DisponibilidadePessoas = 1) THEN
		
			INSERT INTO VIAGENS (IDVIAGENS, CIDADE, DATAHORAINICIO, DATAHORAFINAL, COR, CEP, RUA, NUMERO, BAIRRO, ESTADO, DESCRICAO, ID_DADOSPESSOAS, ID_MOTORISTA, ID_VIATURA)
	                     VALUES (NULL,pCIDADE, pDATAHORAINICIO, pDATAHORAFINAL, pCOR, pCEP, pRUA, pNUMERO, pBAIRRO, pESTADO, pDESCRICAO, pID_DADOSPESSOAS, pID_MOTORISTA, pID_VIATURA);

		else
		Select 'Motorista ou Viatura indisponível na data/hora selecionada.' as 'Error';
		END IF;

	END
		$

CREATE  PROCEDURE ADICIONAR_VIAGEM_TESTE(
		  IN pIDVIAGENS INT ,
		  IN pCIDADE VARCHAR(25) ,
		  IN pDATAHORAINICIO DATETIME ,
		  IN pDATAHORAFINAL DATETIME ,
		  IN pCOR VARCHAR(15) ,
		  IN pCEP CHAR(9) ,
		  IN pRUA VARCHAR(30),
		  IN pNUMERO VARCHAR(8) ,
		  IN pBAIRRO VARCHAR(25) ,
		  IN pESTADO CHAR(2) ,
		  IN pDESCRICAO VARCHAR(200),
		  IN pID_DADOSPESSOAS INT,
		  IN pID_MOTORISTA INT,
		  IN pID_VIATURA INT
		)
	BEGIN
		
		DECLARE DisponibilidadeViatura   INT;
		DECLARE DisponibilidadeMotorista INT;
		DECLARE DisponibilidadePessoas INT;

		if exists (Select * from VIAGENS where ID_VIATURA = pID_VIATURA AND  pDATAHORAINICIO between DATAHORAINICIO and DATAHORAFINAL )
    then 
        Select 'Viatura indisponível na data/hora selecionada.' as 'Error';
    else
        if exists (Select * from VIAGENS where ID_MOTORISTA = pID_MOTORISTA AND  pDATAHORAINICIO between DATAHORAINICIO and DATAHORAFINAL )
        then 
            Select 'Motorista indisponível na data/hora selecionada.' as 'Error';
        else

        	if exists (Select * from VIAGENS where ID_DADOSPESSOAS = pID_DADOSPESSOAS  AND  pDATAHORAINICIO between DATAHORAINICIO and DATAHORAFINAL )
        	then 
          	  Select 'Pessoa indisponível na data/hora selecionada.' as 'Error';
        	else
          	  INSERT INTO VIAGENS (IDVIAGENS, CIDADE, DATAHORAINICIO, DATAHORAFINAL, COR, CEP, RUA, NUMERO, BAIRRO, ESTADO, DESCRICAO, ID_DADOSPESSOAS, ID_MOTORISTA, ID_VIATURA)
                VALUES (NULL,pCIDADE, pDATAHORAINICIO, pDATAHORAFINAL, pCOR, pCEP, pRUA, pNUMERO, pBAIRRO, pESTADO, pDESCRICAO, pID_DADOSPESSOAS, pID_MOTORISTA, pID_VIATURA);
        end if;
    end if;
    		END IF;

	END
		$

/*  ESSA É A ULTIMA PROCEDURE FAÇA OS TESTES COM ELA   */
CREATE  PROCEDURE ADICIONAR_VIAGEM_FINAL(
		  IN pIDVIAGENS INT ,
		  IN pCIDADE VARCHAR(25) ,
		  IN pDATAHORAINICIO DATETIME ,
		  IN pDATAHORAFINAL DATETIME ,
		  IN pCOR VARCHAR(15) ,
		  IN pCEP CHAR(9) ,
		  IN pRUA VARCHAR(30),
		  IN pNUMERO VARCHAR(8) ,
		  IN pBAIRRO VARCHAR(25) ,
		  IN pESTADO CHAR(2) ,
		  IN pDESCRICAO VARCHAR(200),
		  IN pID_DADOSPESSOAS INT,
		  IN pID_MOTORISTA INT,
		  IN pID_VIATURA INT
		)
	BEGIN
		
			IF EXISTS (SELECT * FROM VIAGENS WHERE ID_VIATURA = pID_VIATURA AND  pDATAHORAINICIO BETWEEN DATAHORAINICIO AND DATAHORAFINAL )
    THEN 
        SELECT 'Viatura indisponível na data/hora selecionada.' AS 'Error';
    ELSE
        IF EXISTS (SELECT * FROM VIAGENS WHERE ID_MOTORISTA = pID_MOTORISTA AND  pDATAHORAINICIO BETWEEN DATAHORAINICIO AND DATAHORAFINAL )
        THEN 
            SELECT 'Motorista indisponível na data/hora selecionada.' AS 'Error';
        ELSE
		IF EXISTS (SELECT * FROM VIAGENS WHERE ID_DADOSPESSOAS = pID_DADOSPESSOAS  AND  pDATAHORAINICIO BETWEEN DATAHORAINICIO AND DATAHORAFINAL )
        	THEN 
          	  SELECT 'Pessoa indisponível na data/hora selecionada.' AS 'Error';
        	ELSE
          	  INSERT INTO VIAGENS (IDVIAGENS, CIDADE, DATAHORAINICIO, DATAHORAFINAL, COR, CEP, RUA, NUMERO, BAIRRO, ESTADO, DESCRICAO, ID_DADOSPESSOAS, ID_MOTORISTA, ID_VIATURA)
                VALUES (NULL,pCIDADE, pDATAHORAINICIO, pDATAHORAFINAL, pCOR, pCEP, pRUA, pNUMERO, pBAIRRO, pESTADO, pDESCRICAO, pID_DADOSPESSOAS, pID_MOTORISTA, pID_VIATURA);
        END IF;
    END IF;
    		END IF;

	END
		$




/* CRIANDO O BANCO DE DADOS PARA BACKUP  */

CREATE DATABASE BACKUP_AJKS;

USE BACKUP_AJKS;


/* CRIANDO BACKUP PARA A INSERÇÃO DE DADOS NOVOS */
CREATE TRIGGER BACKUP_DADOSPESSOAS_I
AFTER INSERT ON DADOSPESSOAS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_DADOSPESSOAS VALUES(NULL,NEW.IDDADOSPESSOAS,NEW.NOME,
		NEW.EMAIL, NEW.NIVEL,NEW.DATANASCIMENTO,NEW.SEXO,NEW.CPF,NEW.CELULAR,NEW.CEP,NEW.RUA,
		NEW.NUMERO,NEW.BAIRRO,NEW.CIDADE,NEW.ESTADO,NOW(),CURRENT_USER(),'I');
END
$

CREATE TRIGGER BACKUP_MOTORISTA_I
AFTER INSERT ON MOTORISTA
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_MOTORISTA VALUES(NULL,NEW.IDMOTORISTA,NEW.NUMEROREGISTRO,NEW.VALIDADE,
		NEW.ID_DADOSPESSOAS,NOW(),CURRENT_USER(),'I');
END
$


CREATE TRIGGER BACKUP_ADMIN_I
AFTER INSERT ON ADMIN
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_ADMIN VALUES(NULL, NEW.IDADMIN,NEW.SENHA, NEW.ID_DADOSPESSOAS, NOW(),CURRENT_USER(),'I');
END
$

CREATE TRIGGER BACKUP_VIATURA_I
AFTER INSERT ON VIATURA
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_VIATURA VALUES(NULL, NEW.IDVIATURA,NEW.TIPOVEICULO, NEW.MARCA, NEW.MODELO,
		NEW.COR,NEW.ANOFABRICACAO,NEW.PLACA, NEW.RENAVAN,NEW.PASSAGEIROS,NOW(),CURRENT_USER(),'I');
END
$

CREATE TRIGGER BACKUP_VIAGENS_I
AFTER INSERT ON VIAGENS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_VIAGENS VALUES(NULL,NEW.IDVIAGENS, NEW.CIDADE,NEW.DATAHORAFINAL, NEW.DATAHORAFINAL,NEW.COR,
		NEW.CEP,NEW.RUA,NEW.NUMERO,NEW.BAIRRO,NEW.ESTADO,NEW.DESCRICAO, NEW.ID_DADOSPESSOAS, NEW.ID_MOTORISTA,
		 NEW.ID_VIATURA, NOW(),CURRENT_USER(),'I');
END
$



/* CRIANDO O BACKUP PARA A ATUALIZAÇÃO DE DADOS */

CREATE TRIGGER BACKUP_DADOSPESSOAS_U
BEFORE UPDATE ON DADOSPESSOAS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_DADOSPESSOAS VALUES(NULL,OLD.IDDADOSPESSOAS,OLD.NOME,
		OLD.EMAIL, OLD.NIVEL,OLD.DATANASCIMENTO,OLD.SEXO,OLD.CPF,OLD.CELULAR,OLD.CEP,OLD.RUA,
		OLD.NUMERO,OLD.BAIRRO,OLD.CIDADE,OLD.ESTADO,NOW(),CURRENT_USER(),'U');
END
$

CREATE TRIGGER BACKUP_MOTORISTA_U
BEFORE UPDATE ON MOTORISTA
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_MOTORISTA VALUES(NULL,OLD.IDMOTORISTA,OLD.NUMEROREGISTRO,OLD.VALIDADE,
		OLD.ID_DADOSPESSOAS,NOW(),CURRENT_USER(),'U');
END
$


CREATE TRIGGER BACKUP_ADMIN_U
BEFORE UPDATE ON ADMIN
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_ADMIN VALUES(NULL, OLD.IDADMIN,OLD.SENHA, OLD.ID_DADOSPESSOAS, NOW(),CURRENT_USER(),'U');
END
$

CREATE TRIGGER BACKUP_VIATURA_U
BEFORE UPDATE ON VIATURA
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_VIATURA VALUES(NULL, OLD.IDVIATURA,OLD.TIPOVEICULO, OLD.MARCA, OLD.MODELO,
		OLD.COR,OLD.ANOFABRICACAO,OLD.PLACA, OLD.RENAVAN,OLD.PASSAGEIROS,NOW(),CURRENT_USER(),'U');
END
$

CREATE TRIGGER BACKUP_VIAGENS_U
BEFORE UPDATE ON VIAGENS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_VIAGENS VALUES(NULL,OLD.CIDADE,OLD.DATAHORAFINAL, OLD.DATAHORAFINAL,OLD.COR,
		OLD.CEP,OLD.RUA,OLD.NUMERO,OLD.BAIRRO,OLD.ESTADO,OLD.DESCRICAO, OLD.ID_DADOSPESSOAS, OLD.ID_MOTORISTA, OLD.ID_VIATURA, NOW(),CURRENT_USER(),'U');
END
$





/* CRIANDO O BACKUP PARA DELETE  DE DADOS */


CREATE TRIGGER BACKUP_DADOSPESSOAS_D
BEFORE DELETE ON DADOSPESSOAS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_DADOSPESSOAS VALUES(NULL,OLD.IDDADOSPESSOAS,OLD.NOME,
		OLD.EMAIL, OLD.NIVEL,OLD.DATANASCIMENTO,OLD.SEXO,OLD.CPF,OLD.CELULAR,OLD.CEP,OLD.RUA,
		OLD.NUMERO,OLD.BAIRRO,OLD.CIDADE,OLD.ESTADO,NOW(),CURRENT_USER(),'D');
END
$


CREATE TRIGGER BACKUP_DADOSPESSOAS_MOTORISTA_ADMIN
BEFORE DELETE ON DADOSPESSOAS, MOTORISTA, ADMIN
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP_AJKS.BACKUP_ADMIN VALUES(NULL, OLD.IDADMIN,OLD.SENHA, OLD.ID_DADOSPESSOAS, NOW(),CURRENT_USER(),'D');
END
$

CREATE TRIGGER BACKUP_MOTORISTA_D
BEFORE DELETE ON MOTORISTA
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_MOTORISTA VALUES(NULL,OLD.IDMOTORISTA,OLD.NUMEROREGISTRO,OLD.VALIDADE,
		OLD.ID_DADOSPESSOAS,NOW(),CURRENT_USER(),'D');
END
$


CREATE TRIGGER BACKUP_ADMIN_D
BEFORE DELETE ON ADMIN
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_ADMIN VALUES(NULL, OLD.IDADMIN,OLD.SENHA,NOW(),CURRENT_USER(),'D');
END
$

CREATE TRIGGER BACKUP_VIATURA_D
BEFORE DELETE  ON VIATURA
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_VIATURA VALUES(NULL, OLD.IDVIATURA,OLD.TIPOVEICULO, OLD.MARCA, OLD.MODELO,
		OLD.COR,OLD.ANOFABRICACAO,OLD.PLACA, OLD.RENAVAN,OLD.PASSAGEIROS,NOW(),CURRENT_USER(),'D');
END
$

CREATE TRIGGER BACKUP_VIAGENS_D
BEFORE DELETE ON VIAGENS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP_AJKS.BACKUP_VIAGENS VALUES(NULL, OLD.IDVIAGENS,OLD.CIDADE,OLD.DATAHORAINICIO, OLD.DATAHORAFINAL,OLD.COR,
		OLD.CEP,OLD.RUA,OLD.NUMERO,OLD.BAIRRO,OLD.ESTADO,OLD.DESCRICAO, OLD.ID_DADOSPESSOAS, OLD.ID_MOTORISTA, OLD.ID_VIATURA, NOW(),CURRENT_USER(),'D');
END
$



DELIMITER ;

SELECT * FROM DADOSPESSOAS;

SELECT * FROM BACKUP_AJKS.BACKUP_DADOSPESSOAS; */  

INSERT INTO DADOSPESSOAS VALUES (NULL,'CRISTHIAN','TITIANALVES@HOTMAIL.COM','1','1993-11-26','M','03196793060',
'51-998590551','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');
INSERT INTO MOTORISTA VALUES(NULL,'1234567890','2018-03-22', (SELECT LAST_INSERT_ID()));

INSERT INTO VIATURA VALUES(NULL,'PASSEIO','FORD','FIESTA','PRETO','2004','ILV-2445','12345678901','5' );

INSERT INTO VIATURA VALUES(NULL,'PASSEIO','FIAT','MOBI','BRANCO','2017','IXV-9999','9654287563','4');


INSERT INTO DADOSPESSOAS VALUES (NULL,'MARCELLY','SSSSS@GMAIL.COM','1','1993-11-26','M',
	'99999999999','51-955550551','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');
INSERT INTO MOTORISTA VALUES(NULL,'5646876844','2018-03-22', (SELECT LAST_INSERT_ID()));

INSERT INTO DADOSPESSOAS VALUES (NULL,'BRUTUS','BRUTUS@GMAIL.COM','1','1993-11-26','M',
	'564564565','51-000000000','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');

mysql> SELECT * FROM DADOSPESSOAS$
+----------------+-----------+-------------------------+-------+----------------+------+-------------+--------------+-----------+--------------------+--------+--------+---------+--------+
| IDDADOSPESSOAS | NOME      | EMAIL                   | NIVEL | DATANASCIMENTO | SEXO | CPF         | CELULAR      | CEP       | RUA                | NUMERO | BAIRRO | CIDADE  | ESTADO |
+----------------+-----------+-------------------------+-------+----------------+------+-------------+--------------+-----------+--------------------+--------+--------+---------+--------+
|              1 | CRISTHIAN | TITIANALVES@HOTMAIL.COM | 1     | 1993-11-26     | M    | 03196793060 | 51-998590551 | 95530-000 | RUA ANIBAL DAMBROS | 170    | CENTRO | MAQUINE | RS     |
|              2 | MARCELLY  | SSSSS@GMAIL.COM         | 1     | 1993-11-26     | M    | 99999999999 | 51-955550551 | 95530-000 | RUA ANIBAL DAMBROS | 170    | CENTRO | MAQUINE | RS     |
|              3 | BRUTUS    | BRUTUS@GMAIL.COM        | 1     | 1993-11-26     | M    | 564564565   | 51-000000000 | 95530-000 | RUA ANIBAL DAMBROS | 170    | CENTRO | MAQUINE | RS     |
+----------------+-----------+-------------------------+-------+----------------+------+-------------+--------------+-----------+--------------------+--------+--------+---------+--------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM MOTORISTA$
+-------------+----------------+------------+-----------------+
| IDMOTORISTA | NUMEROREGISTRO | VALIDADE   | ID_DADOSPESSOAS |
+-------------+----------------+------------+-----------------+
|           1 | 1234567890     | 2018-03-22 |               1 |
|           2 | 5646876844     | 2018-03-22 |               2 |
+-------------+----------------+------------+-----------------+
2 rows in set (0.00 sec)

mysql> SELECT * FROM VIATURA$
+-----------+-------------+-------+--------+--------+---------------+----------+-------------+-------------+
| IDVIATURA | TIPOVEICULO | MARCA | MODELO | COR    | ANOFABRICACAO | PLACA    | RENAVAN     | PASSAGEIROS |
+-----------+-------------+-------+--------+--------+---------------+----------+-------------+-------------+
|         1 | PASSEIO     | FORD  | FIESTA | PRETO  | 2004          | ILV-2445 | 12345678901 | 5           |
|         2 | PASSEIO     | FIAT  | MOBI   | BRANCO | 2017          | IXV-9999 | 9654287563  | 4           |
+-----------+-------------+-------+--------+--------+---------------+----------+-------------+-------------+

	CALL TESTE  (NULL,'PORTO ALEGRE','2018-04-12 09:00:00', '2018-04-13 17:00:00', 'ROSA', 
		'95555-000', 'AVENIDA BRASIL', '69','MENINO GAY','RS', 'LEVAR O MAURICIO PARA PERDER E PAGAR TUDO',1,1,1)$
	
	CALL TESTE  (NULL,'PORTO ALEGRE','2018-04-12 09:00:00', '2018-04-13 17:00:00', 'ROSA', 
		'95555-000', 'AVENIDA BRASIL', '69','MENINO GAY','RS', 'LEVAR O MAURICIO PARA PERDER E PAGAR TUDO',1,2,1)$
	
	CALL TESTE  (NULL,'PORTO ALEGRE','2018-04-13 09:00:00', '2018-04-13 17:00:00', 'ROSA', 
		'95555-000', 'AVENIDA BRASIL', '69','MENINO GAY','RS', 'LEVAR O MAURICIO PARA PERDER E PAGAR TUDO',1,1,1)$
	
	CALL TESTE  (NULL,'PORTO ALEGRE','2018-04-13 09:00:00', '2018-04-13 17:00:00', 'ROSA', 
		'95555-000', 'AVENIDA BRASIL', '69','MENINO GAY','RS', 'LEVAR O MAURICIO PARA PERDER E PAGAR TUDO',1,1,1)$

/* INSEÇÃO DE DADOS DE TESTES */

INSERT INTO DADOSPESSOAS VALUES (NULL,'CRISTHIAN','TITIANALVES@HOTMAIL.COM','1','1993-11-26','M','03196793060',
	'51-998590551','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');
INSERT INTO MOTORISTA VALUES(NULL,'1234567890','2018-03-22', (SELECT LAST_INSERT_ID()));

INSERT INTO VIATURA VALUES(NULL,'PASSEIO','FORD','FIESTA','PRETO','2004','ILV-2445','12345678901','5' );

INSERT INTO VIATURA VALUES(NULL,'PASSEIO','FIAT','MOBI','BRANCO','2017','IXV-9999','9654287563','4');


INSERT INTO DADOSPESSOAS VALUES (NULL,'MARCELLY','SSSSS@GMAIL.COM','1','1993-11-26','M',
	'99999999999','51-955550551','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');
INSERT INTO MOTORISTA VALUES(NULL,'5646876844','2018-03-22', (SELECT LAST_INSERT_ID()));

INSERT INTO DADOSPESSOAS VALUES (NULL,'BRUTUS','BRUTUS@GMAIL.COM','1','1993-11-26','M',
	'564564565','51-000000000','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');

	INSERT INTO DADOSPESSOAS VALUES (NULL,'MAURICIO','MAUVIRTUAL@GMAIL.COM','1','1993-11-26','M',
	'98669320010','51-981349333','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');


INSERT INTO ADMIN VALUES(NULL, '123456',(SELECT LAST_INSERT_ID()));
INSERT INTO DADOSPESSOAS VALUES (NULL,'MAURICIO','ddddd@GMAIL.COM','1','1993-11-26','M','11111111111',
	'51-99865656','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');
INSERT INTO ADMIN VALUES(NULL, '123456', (SELECT LAST_INSERT_ID()));

INSERT INTO DADOSPESSOAS VALUES (NULL,'MARCELLY','SSSSS@GMAIL.COM','1','1993-11-26','M',
	'99999999999','51-955550551','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');
INSERT INTO MOTORISTA VALUES(NULL,'1234567890','2018-03-22',5);

INSERT INTO DADOSPESSOAS VALUES (NULL,'BRUTUS','BRUTUS@GMAIL.COM','1','1993-11-26','M',
	'564564565','51-000000000','95530-000','RUA ANIBAL DAMBROS','170','CENTRO','MAQUINE','RS');
INSERT INTO ADMIN VALUES(NULL, '123456',(SELECT LAST_INSERT_ID()));


	CALL ADICIONAR_VIAGEM_teste  (NULL,'PORTO ALEGRE','2018-04-12 09:00:00', '2018-04-12 17:00:00', 'ROSA', 
		'95555-000', 'AVENIDA BRASIL', '69','MENINO GAY','RS', 'LEVAR O MAURICIO PARA PERDER E PAGAR TUDO',3,2,1)$

	CALL ADICIONAR_VIAGEM_FINAL (NULL,'PORTO ALEGRE','2018-04-12 09:00:00', '2018-04-12 17:00:00', 'ROSA', 
		'95555-000', 'AVENIDA BRASIL', '69','MENINO GAY','RS', 'LEVAR O MAURICIO PARA PERDER E PAGAR TUDO',3,2,1)$

INSERT INTO VIAGENS VALUES(NULL,'PORTO ALEGRE','2018-04-12 09:00:00', '2018-04-12 17:00:00', 'ROSA', 
	'95555-000', 'AVENIDA BRASIL', '69','MENINO GAY','RS', 'LEVAR O MAURICIO PARA PERDER E PAGAR TUDO',3,2,1)
$

/* PROJEÇÃO DE DADOS */

	SELECT
		CIDADE,
		DATAHORAINICIO,
		DATAHORAFINAL,
		RUA,
		NUMERO,
		BAIRRO,
		CIDADE,
		ESTADO,
		CEP,
		MOTORISTA,
		MARCA,
		MODELO,
		PLACA
	FROM VIAGENS V
	INNER JOIN MOTORISTA M
	ON

	SELECT
		D.NOME,
		D.EMAIL,
		D.NIVEL,
		D.CPF,
		A.SENHA,
		M.NUMEROREGISTRO AS 'CNH',
		
	FROM DADOSPESSOAS D
	INNER JOIN ADMIN A
	ON D.IDDADOSPESSOAS = A.ID_DADOSPESSOAS
	INNER JOIN MOTORISTA M
	ON D.IDDADOSPESSOAS = M.ID_DADOSPESSOAS;




